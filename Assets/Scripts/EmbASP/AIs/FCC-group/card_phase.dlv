% ======================================================================
%                              CARDS LOGIC
% ======================================================================


%cards_count(T, Player, Cards).
%card(T, Player, CardName, CardType, CardTerritory).
%possible_card_exchange(T, Player, ExchangeId, ExchangeTypeId, Card1, Card2, Card3, Troops).
%exchange_cards(T, Player, ExchangeId).


%guess generico
{ exchange(T,Player, ID, TypeID, Card1,Card2,Card3,Troops) } <= 1 :- 
    possible_card_exchange(T, Player, ID, TypeID, Card1,Card2,Card3,Troops),
    curr_turn(T, Player).

:- #count{T,ID : exchange(T,Player,ID,TypeID,Card1,Card2,Card3,Troops)} > 1.


%pagare per ogni exchange in cui Troops è basso

exchange_cost(T,Player,C) :- 
    exchange(T,Player,_,_,_,_,_,Troops), 
    C = 16-Troops.

:~ exchange_cost(_,_,C). [C@2,C]


%effettuare uno scambio se il numero di truppe in tuo possesso è basso rispetto agli avversari (Prioritario)

    %truppe in possesso del giocatore P al turno T
    % curr_player_territory(T, Territory, Troops).

    %max truppe in possesso di un giocatore al turno T diverso da P
    % other_player_territory(T, Territory, Player, Troops).

    other_player_max_troops(T,Max) :- 
        curr_turn(T,_), 
        Max = #max{Troops : other_player_territory(T, Territory, Player, Troops) }.

    % differenza truppe in possesso
    % positive: curr_player has more troops than other player
    % 0: curr_player has same troops as other player
    % negative: curr_player has less troops than other player
    index_diff_troops(T,Player, OtherPlayer, Diff) :- 
        curr_turn(T, Player), 
        curr_player_troops_count(T, Player, CurrCount),
        other_player_troops_count(T, OtherPlayer, OtherCount),
        Diff = CurrCount - OtherCount.

    %exchange + index_diff_troops
    :~ exchange(T,P,_,_,_,_,_,Troops), index_diff_troops(T,P,OP,Diff), C = 1000+Troops-Diff. [C@3,C]


%effettuare uno scambio se si vuole attuare una strategia di fortificazione(Medio)


exchange_cards(T,Player,ID) :- exchange(T,Player,ID,_,_,_,_,_).
